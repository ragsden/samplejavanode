<?xml version="1.0" encoding="UTF-8"?>

<project name="cobertura.examples.basic" default="coverage" basedir=".">

        <property file="build.properties" />

        <path id="cobertura.classpath">
                <fileset dir="${cobertura.dir}">
                        <include name="cobertura.jar" />
                        <include name="lib/**/*.jar" />
                </fileset>
        </path>

        <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

        <target name="init">
                <mkdir dir="${classes.dir}" />
                <mkdir dir="${instrumented.dir}" />
                <mkdir dir="${reports.xml.dir}" />
                <mkdir dir="${coverage.xml.dir}" />
        </target>

        <target name="compile" depends="init">
                <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes">
                        <classpath refid="cobertura.classpath" />
                </javac>
        </target>

        <target name="instrument" depends="init,compile">
                <!--
                        Remove the coverage data file and any old instrumentation.
                -->
                <delete file="cobertura.ser"/>
                <delete dir="${instrumented.dir}" />

                <!--
                        Instrument the application classes, writing the
                        instrumented classes into ${build.instrumented.dir}.
                -->
                <cobertura-instrument todir="${instrumented.dir}">
                        <!--
                                The following line causes instrument to ignore any
                                source line containing a reference to log4j, for the
                                purposes of coverage reporting.
                        -->
                        <ignore regex="org.apache.log4j.*" />

                        <fileset dir="${classes.dir}">
                                <!--
                                        Instrument all the application classes, but
                                        don't instrument the test classes.
                                -->
                                <include name="**/*.class" />
                                <exclude name="**/*Test.class" />
                        </fileset>
                </cobertura-instrument>
        </target>

        <target name="test" depends="init,compile">
                <junit haltonfailure="no" showoutput="yes" >
                        <!--
                                Note the classpath order: instrumented classes are before the
                                original (uninstrumented) classes.  This is important.
                        -->
                        <classpath location="${instrumented.dir}" />
                        <classpath location="${classes.dir}" />

                        <!--
                                The instrumented classes reference classes used by the
                                Cobertura runtime, so Cobertura and its dependencies
                                must be on your classpath.
                        -->
                        <classpath refid="cobertura.classpath" />

                        
                        <batchtest fork="yes" todir="${reports.xml.dir}">
				<formatter type="xml" />
                                <fileset dir="${src.dir}">
                                        <include name="**/*Test*.java" />
                                </fileset>
                        </batchtest>
                </junit>
		
               
        </target>

        <target name="coverage-check">
                <cobertura-check branchrate="34" totallinerate="100" />
        </target>

        <target name="coverage-report">
                <!--
                        Generate an XML file containing the coverage data using
                        the "srcdir" attribute.
                -->
                <cobertura-report srcdir="${src.dir}" destdir="${coverage.xml.dir}" format="xml" />
        </target>

        <target name="clean" description="Remove all files created by the build/test process.">
                <delete dir="${classes.dir}" />
                <delete dir="${instrumented.dir}" />
                <delete dir="${reports.dir}" />
                <delete file="cobertura.log" />
                <delete file="cobertura.ser" />
        </target>

        <target name="coverage" depends="compile,instrument,test,coverage-report" description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports."/>

</project>
